-- MySQL Script generated by MySQL Workbench
-- Sun May 10 18:02:56 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Schoolsupport
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Schoolsupport
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Schoolsupport` DEFAULT CHARACTER SET utf8 ;
USE `Schoolsupport` ;

-- -----------------------------------------------------
-- Table `Schoolsupport`.`Role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Schoolsupport`.`Role` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(45) NULL,
  `role_description` VARCHAR(120) NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Schoolsupport`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Schoolsupport`.`User` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_password` VARCHAR(85) NULL,
  `user_email` VARCHAR(120) NULL,
  `user_role_id` INT NOT NULL DEFAULT 1,
  `user_name` VARCHAR(85) NULL,
  PRIMARY KEY (`user_id`),
  INDEX `fk_User_Role1_idx` (`user_role_id` ASC) VISIBLE,
  CONSTRAINT `fk_User_Role1`
    FOREIGN KEY (`user_role_id`)
    REFERENCES `Schoolsupport`.`Role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Schoolsupport`.`Status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Schoolsupport`.`Status` (
  `status_id` INT NOT NULL AUTO_INCREMENT,
  `status_description` VARCHAR(120) NULL,
  PRIMARY KEY (`status_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Schoolsupport`.`Subject`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Schoolsupport`.`Subject` (
  `subject_id` INT NOT NULL AUTO_INCREMENT,
  `subject_description` VARCHAR(120) NULL,
  PRIMARY KEY (`subject_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Schoolsupport`.`Ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Schoolsupport`.`Ticket` (
  `ticket_id` INT NOT NULL AUTO_INCREMENT,
  `ticket_naam` VARCHAR(45) NOT NULL,
  `ticket_date` DATETIME NULL DEFAULT '2020-01-01',
  `ticket_user_id` INT NOT NULL,
  `ticket_status_id` INT NOT NULL DEFAULT 1,
  `ticket_question_description` VARCHAR(5000) NOT NULL,
  `ticket_subject_id` INT NOT NULL,
  PRIMARY KEY (`ticket_id`),
  INDEX `fk_Ticket_User_idx` (`ticket_user_id` ASC) VISIBLE,
  INDEX `fk_Ticket_Status1_idx` (`ticket_status_id` ASC) VISIBLE,
  INDEX `fk_Ticket_Subject1_idx` (`ticket_subject_id` ASC) VISIBLE,
  CONSTRAINT `fk_Ticket_User`
    FOREIGN KEY (`ticket_user_id`)
    REFERENCES `Schoolsupport`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ticket_User1`
    FOREIGN KEY (`ticket_user_id`)
    REFERENCES `Schoolsupport`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ticket_Status1`
    FOREIGN KEY (`ticket_status_id`)
    REFERENCES `Schoolsupport`.`Status` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ticket_Subject1`
    FOREIGN KEY (`ticket_subject_id`)
    REFERENCES `Schoolsupport`.`Subject` (`subject_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Schoolsupport`.`Answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Schoolsupport`.`Answer` (
  `answer_id` INT NOT NULL AUTO_INCREMENT,
  `answer_description` VARCHAR(120) NULL,
  `answer_user_id` INT NOT NULL,
  `answer_date` DATETIME NULL,
  `ticket_id` INT NOT NULL,
  PRIMARY KEY (`answer_id`),
  INDEX `fk_Answer_User1_idx` (`answer_user_id` ASC) VISIBLE,
  INDEX `fk_Answer_Ticket1_idx` (`ticket_id` ASC) VISIBLE,
  CONSTRAINT `fk_Answer_User1`
    FOREIGN KEY (`answer_user_id`)
    REFERENCES `Schoolsupport`.`User` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Answer_Ticket1`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `Schoolsupport`.`Ticket` (`ticket_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `Schoolsupport`.`Role`
-- -----------------------------------------------------
START TRANSACTION;
USE `Schoolsupport`;
INSERT INTO `Schoolsupport`.`Role` (`role_id`, `role_name`, `role_description`) VALUES (1, 'Student', 'No rights');
INSERT INTO `Schoolsupport`.`Role` (`role_id`, `role_name`, `role_description`) VALUES (2, 'Teacher', 'Minimal rights');
INSERT INTO `Schoolsupport`.`Role` (`role_id`, `role_name`, `role_description`) VALUES (3, 'Admin', 'All rights');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Schoolsupport`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `Schoolsupport`;
INSERT INTO `Schoolsupport`.`User` (`user_id`, `user_password`, `user_email`, `user_role_id`, `user_name`) VALUES (1, 'Appeltaart', 'Kato@hotmail.com', 1, 'Kato');
INSERT INTO `Schoolsupport`.`User` (`user_id`, `user_password`, `user_email`, `user_role_id`, `user_name`) VALUES (2, 'Kaso2640', 'Leerkracht@kaso.com', 2, 'Leerkracht');
INSERT INTO `Schoolsupport`.`User` (`user_id`, `user_password`, `user_email`, `user_role_id`, `user_name`) VALUES (3, 'Koning123', 'Pieter@hotmail.com', 1, 'Pieter');
INSERT INTO `Schoolsupport`.`User` (`user_id`, `user_password`, `user_email`, `user_role_id`, `user_name`) VALUES (4, 'Ko65J2lb8sdgd32GHV78', 'Admin@kaso.com', 3, 'Admin');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Schoolsupport`.`Status`
-- -----------------------------------------------------
START TRANSACTION;
USE `Schoolsupport`;
INSERT INTO `Schoolsupport`.`Status` (`status_id`, `status_description`) VALUES (1, 'New');
INSERT INTO `Schoolsupport`.`Status` (`status_id`, `status_description`) VALUES (2, 'Open');
INSERT INTO `Schoolsupport`.`Status` (`status_id`, `status_description`) VALUES (3, 'In progress');
INSERT INTO `Schoolsupport`.`Status` (`status_id`, `status_description`) VALUES (4, 'Solved');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Schoolsupport`.`Subject`
-- -----------------------------------------------------
START TRANSACTION;
USE `Schoolsupport`;
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (1, 'Hardware');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (2, 'Software');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (3, 'Smartschool');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (4, 'Other');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (5, 'Javascript');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (6, 'C#');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (7, 'C++');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (8, 'C');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (9, 'HTML');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (10, 'CSS');
INSERT INTO `Schoolsupport`.`Subject` (`subject_id`, `subject_description`) VALUES (11, 'Bootstrap');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Schoolsupport`.`Ticket`
-- -----------------------------------------------------
START TRANSACTION;
USE `Schoolsupport`;
INSERT INTO `Schoolsupport`.`Ticket` (`ticket_id`, `ticket_naam`, `ticket_date`, `ticket_user_id`, `ticket_status_id`, `ticket_question_description`, `ticket_subject_id`) VALUES (1, 'Computer problemen', '2020-01-02', 3, 1, 'Na enkele uren spelen starte mijn pc niet meer op', 1);
INSERT INTO `Schoolsupport`.`Ticket` (`ticket_id`, `ticket_naam`, `ticket_date`, `ticket_user_id`, `ticket_status_id`, `ticket_question_description`, `ticket_subject_id`) VALUES (2, 'Smartschool problemen', '2020-01-03', 1, 1, 'ik ben mijn login van smartschool vergeten', 3);
INSERT INTO `Schoolsupport`.`Ticket` (`ticket_id`, `ticket_naam`, `ticket_date`, `ticket_user_id`, `ticket_status_id`, `ticket_question_description`, `ticket_subject_id`) VALUES (3, 'Hardware problem', '2020-01-03', 1, 1, 'problem5643 when booting pc', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Schoolsupport`.`Answer`
-- -----------------------------------------------------
START TRANSACTION;
USE `Schoolsupport`;
INSERT INTO `Schoolsupport`.`Answer` (`answer_id`, `answer_description`, `answer_user_id`, `answer_date`, `ticket_id`) VALUES (1, 'Restart PC from safety boot', 2, '2019-01-04', 3);
INSERT INTO `Schoolsupport`.`Answer` (`answer_id`, `answer_description`, `answer_user_id`, `answer_date`, `ticket_id`) VALUES (2, 'Rip you no help', 2, '2019-01-04', 1);
INSERT INTO `Schoolsupport`.`Answer` (`answer_id`, `answer_description`, `answer_user_id`, `answer_date`, `ticket_id`) VALUES (3, 'Rip haaha ', 4, '2019-01-04', 2);

COMMIT;

